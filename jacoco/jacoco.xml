<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="Commons Concurrent"><sessioninfo id="weltraumschaf.fritz.box-2f17c849" start="1399743476745" dump="1399743479103"/><package name="de/weltraumschaf/commons/concurrent"><class name="de/weltraumschaf/commons/concurrent/ConcurrentStack"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peek" desc="()Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="pop" desc="()Ljava/lang/Object;" line="51"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="push" desc="(Ljava/lang/Object;)V" line="66"><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="54"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/weltraumschaf/commons/concurrent/ConcurrentQueue"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)V" line="51"><counter type="INSTRUCTION" missed="2" covered="59"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="1" covered="42"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="128"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/weltraumschaf/commons/concurrent/Concurrent"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newStack" desc="()Lde/weltraumschaf/commons/concurrent/Stack;" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newQueue" desc="()Lde/weltraumschaf/commons/concurrent/Queue;" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/weltraumschaf/commons/concurrent/ConcurrentStack$Entry"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lde/weltraumschaf/commons/concurrent/ConcurrentStack$Entry;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="de/weltraumschaf/commons/concurrent/ConcurrentQueue$Entry"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="133"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="138"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="148"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="6"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ConcurrentQueue.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="14" mb="1" cb="3"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="2"/><line nr="56" mi="0" ci="6" mb="1" cb="1"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="12" mb="2" cb="2"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="1" cb="1"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="15" mb="2" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="1" cb="1"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="14" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="16" ci="0" mb="4" cb="0"/><line nr="148" mi="11" ci="0" mb="2" cb="0"/><line nr="151" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="134"/><counter type="BRANCH" missed="16" covered="18"/><counter type="LINE" missed="10" covered="30"/><counter type="COMPLEXITY" missed="15" covered="10"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ConcurrentStack.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="2"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="2" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="1" cb="1"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="1" cb="1"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="63"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Concurrent.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="93" covered="205"/><counter type="BRANCH" missed="20" covered="24"/><counter type="LINE" missed="15" covered="49"/><counter type="COMPLEXITY" missed="20" covered="19"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="0" covered="5"/></package><counter type="INSTRUCTION" missed="93" covered="205"/><counter type="BRANCH" missed="20" covered="24"/><counter type="LINE" missed="15" covered="49"/><counter type="COMPLEXITY" missed="20" covered="19"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="0" covered="5"/></report>