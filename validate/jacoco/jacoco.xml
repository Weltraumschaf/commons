<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="Commons Validate"><sessioninfo id="weltraumschaf.fritz.box-b75ab63c" start="1414092072078" dump="1414092073655"/><package name="de/weltraumschaf/commons/validate"><class name="de/weltraumschaf/commons/validate/Validate"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notNull" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notNull" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEmpty" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEmpty" desc="(Ljava/lang/String;)Ljava/lang/String;" line="126"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterThan" desc="(IILjava/lang/String;)I" line="142"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterThan" desc="(II)I" line="162"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanOrEqual" desc="(IILjava/lang/String;)I" line="178"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterThanOrEqual" desc="(II)I" line="198"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThan" desc="(JJLjava/lang/String;)J" line="214"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterThan" desc="(JJ)J" line="234"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="greaterThanOrEqual" desc="(JJLjava/lang/String;)J" line="250"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterThanOrEqual" desc="(JJ)J" line="270"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTrue" desc="(ZLjava/lang/String;)V" line="283"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="194"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="10" covered="33"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Validate.java"><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="12" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="3" mb="1" cb="1"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="22" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="3" mb="1" cb="1"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="22" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="2"/><line nr="215" mi="0" ci="3" mb="1" cb="1"/><line nr="216" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="22" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="2"/><line nr="251" mi="0" ci="3" mb="1" cb="1"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="0" ci="22" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="2"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="194"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="10" covered="33"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="43" covered="194"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="10" covered="33"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="43" covered="194"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="10" covered="33"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></report>